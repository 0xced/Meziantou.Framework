//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GitVersion
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Meziantou.Framework
{
    partial struct FileLength
    {
        public static FileLength FromByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.Byte));
        public static FileLength FromByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.Byte));
        public static FileLength FromByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.Byte));
        public static FileLength FromByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.Byte));
        public static FileLength FromKiloByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.KiloByte));
        public static FileLength FromKiloByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.KiloByte));
        public static FileLength FromKiloByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.KiloByte));
        public static FileLength FromKiloByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.KiloByte));
        public static FileLength FromMegaByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.MegaByte));
        public static FileLength FromMegaByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.MegaByte));
        public static FileLength FromMegaByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.MegaByte));
        public static FileLength FromMegaByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.MegaByte));
        public static FileLength FromGigaByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.GigaByte));
        public static FileLength FromGigaByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.GigaByte));
        public static FileLength FromGigaByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.GigaByte));
        public static FileLength FromGigaByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.GigaByte));
        public static FileLength FromTeraByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.TeraByte));
        public static FileLength FromTeraByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.TeraByte));
        public static FileLength FromTeraByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.TeraByte));
        public static FileLength FromTeraByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.TeraByte));
        public static FileLength FromPetaByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.PetaByte));
        public static FileLength FromPetaByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.PetaByte));
        public static FileLength FromPetaByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.PetaByte));
        public static FileLength FromPetaByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.PetaByte));
        public static FileLength FromExaByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.ExaByte));
        public static FileLength FromExaByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.ExaByte));
        public static FileLength FromExaByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.ExaByte));
        public static FileLength FromExaByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.ExaByte));
        public static FileLength FromKibiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.KibiByte));
        public static FileLength FromKibiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.KibiByte));
        public static FileLength FromKibiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.KibiByte));
        public static FileLength FromKibiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.KibiByte));
        public static FileLength FromMebiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.MebiByte));
        public static FileLength FromMebiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.MebiByte));
        public static FileLength FromMebiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.MebiByte));
        public static FileLength FromMebiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.MebiByte));
        public static FileLength FromGibiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.GibiByte));
        public static FileLength FromGibiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.GibiByte));
        public static FileLength FromGibiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.GibiByte));
        public static FileLength FromGibiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.GibiByte));
        public static FileLength FromTebiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.TebiByte));
        public static FileLength FromTebiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.TebiByte));
        public static FileLength FromTebiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.TebiByte));
        public static FileLength FromTebiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.TebiByte));
        public static FileLength FromPebiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.PebiByte));
        public static FileLength FromPebiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.PebiByte));
        public static FileLength FromPebiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.PebiByte));
        public static FileLength FromPebiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.PebiByte));
        public static FileLength FromExbiByte(int value) => new FileLength((long)(value * (long)FileLengthUnit.ExbiByte));
        public static FileLength FromExbiByte(long value) => new FileLength((long)(value * (long)FileLengthUnit.ExbiByte));
        public static FileLength FromExbiByte(float value) => new FileLength((long)(value * (long)FileLengthUnit.ExbiByte));
        public static FileLength FromExbiByte(double value) => new FileLength((long)(value * (long)FileLengthUnit.ExbiByte));
    }
}
